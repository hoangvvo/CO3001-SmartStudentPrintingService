/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.12.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface UserFile
 */
export interface UserFile {
    /**
     * 
     * @type {number}
     * @memberof UserFile
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof UserFile
     */
    user_id: number;
    /**
     * 
     * @type {string}
     * @memberof UserFile
     */
    file_name: string;
    /**
     * 
     * @type {number}
     * @memberof UserFile
     */
    file_size: number;
    /**
     * 
     * @type {string}
     * @memberof UserFile
     */
    file_type: string;
    /**
     * 
     * @type {string}
     * @memberof UserFile
     */
    file_path: string;
    /**
     * 
     * @type {Date}
     * @memberof UserFile
     */
    created_at: Date;
    /**
     * 
     * @type {User}
     * @memberof UserFile
     */
    user?: User;
}

/**
 * Check if a given object implements the UserFile interface.
 */
export function instanceOfUserFile(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "user_id" in value;
    isInstance = isInstance && "file_name" in value;
    isInstance = isInstance && "file_size" in value;
    isInstance = isInstance && "file_type" in value;
    isInstance = isInstance && "file_path" in value;
    isInstance = isInstance && "created_at" in value;

    return isInstance;
}

export function UserFileFromJSON(json: any): UserFile {
    return UserFileFromJSONTyped(json, false);
}

export function UserFileFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserFile {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'user_id': json['user_id'],
        'file_name': json['file_name'],
        'file_size': json['file_size'],
        'file_type': json['file_type'],
        'file_path': json['file_path'],
        'created_at': (new Date(json['created_at'])),
        'user': !exists(json, 'user') ? undefined : UserFromJSON(json['user']),
    };
}

export function UserFileToJSON(value?: UserFile | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'user_id': value.user_id,
        'file_name': value.file_name,
        'file_size': value.file_size,
        'file_type': value.file_type,
        'file_path': value.file_path,
        'created_at': (value.created_at.toISOString()),
        'user': UserToJSON(value.user),
    };
}

