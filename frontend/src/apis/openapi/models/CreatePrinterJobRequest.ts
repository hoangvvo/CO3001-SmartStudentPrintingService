/* tslint:disable */
/* eslint-disable */
/**
 * @fastify/swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.12.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreatePrinterJobRequest
 */
export interface CreatePrinterJobRequest {
    /**
     * 
     * @type {number}
     * @memberof CreatePrinterJobRequest
     */
    printer_id: number;
    /**
     * 
     * @type {number}
     * @memberof CreatePrinterJobRequest
     */
    file_id: number;
    /**
     * 
     * @type {string}
     * @memberof CreatePrinterJobRequest
     */
    page_size: string;
    /**
     * 
     * @type {number}
     * @memberof CreatePrinterJobRequest
     */
    page_count: number;
    /**
     * 
     * @type {boolean}
     * @memberof CreatePrinterJobRequest
     */
    double_side: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof CreatePrinterJobRequest
     */
    color: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof CreatePrinterJobRequest
     */
    orientation: CreatePrinterJobRequestOrientationEnum;
}


/**
 * @export
 */
export const CreatePrinterJobRequestOrientationEnum = {
    Portrait: 'portrait',
    Landscape: 'landscape'
} as const;
export type CreatePrinterJobRequestOrientationEnum = typeof CreatePrinterJobRequestOrientationEnum[keyof typeof CreatePrinterJobRequestOrientationEnum];


/**
 * Check if a given object implements the CreatePrinterJobRequest interface.
 */
export function instanceOfCreatePrinterJobRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "printer_id" in value;
    isInstance = isInstance && "file_id" in value;
    isInstance = isInstance && "page_size" in value;
    isInstance = isInstance && "page_count" in value;
    isInstance = isInstance && "double_side" in value;
    isInstance = isInstance && "color" in value;
    isInstance = isInstance && "orientation" in value;

    return isInstance;
}

export function CreatePrinterJobRequestFromJSON(json: any): CreatePrinterJobRequest {
    return CreatePrinterJobRequestFromJSONTyped(json, false);
}

export function CreatePrinterJobRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreatePrinterJobRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'printer_id': json['printer_id'],
        'file_id': json['file_id'],
        'page_size': json['page_size'],
        'page_count': json['page_count'],
        'double_side': json['double_side'],
        'color': json['color'],
        'orientation': json['orientation'],
    };
}

export function CreatePrinterJobRequestToJSON(value?: CreatePrinterJobRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'printer_id': value.printer_id,
        'file_id': value.file_id,
        'page_size': value.page_size,
        'page_count': value.page_count,
        'double_side': value.double_side,
        'color': value.color,
        'orientation': value.orientation,
    };
}

